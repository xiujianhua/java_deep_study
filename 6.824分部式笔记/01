核心：通过网络使一群计算机互相通信来完成一些连贯的任务

建议：如果设计一个架构，可以不使用分布式系统解决尽量不使用，因为其他实现方式会简单很多

人们被迫使用大量计算进行协作的愿意那是他们需要：
1. 高性能需求
2. 容错需求： 有两台计算机做相同的事情，如果其中的一台发送故障，可以切换到另一台
3. 物理空间上的需求：两银行转账，一个机房在北京，一个在深圳，它需要彼此交谈来完成工作 
4. 安全性需要：可以把不信任的代码单独部署，只通过网络来连接，实现隔离

本课程主要目标是1,2


好的分布式系统的标准：
1. 性能
    . 可扩展性：用两倍的计算机可以得到两倍的吞吐量和系统性能
2. 容错性
    - 可用性：系统出了问题可以继续工作
    - 可恢复性
        - 使用更多的非易失性存储（昂贵，低效）
        - 复制
        - 
        - 
        - 
最终主题：一致性 
强一致性：总能get到最新put的数据
人们对弱一致性感兴趣是因为：强一致性成本高昂，它必须通过多次通讯来完成（比如：用户读取所有数据，然后取最新的那个）
